{"version":3,"sources":["LiSEC_eye.jpg","App.js","Svg.js","Canvas.js","Upload.js","Routing.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","banner","alt","href","target","onClick","e","window","confirm","open","preventDefault","handleChange","state","x","y","w","h","color","changeHandler","setState","name","value","colorHandler","type","this","onChange","height","width","version","points","fill","React","Component","ctx","document","getElementById","getContext","moveTo","lineTo","fillStyle","id","Upload","props","fileChangedHandler","event","selectedFile","reader","FileReader","onloadend","length","newList","concat","JSON","parse","result","readAsText","files","handleInput","handleAdd","newColor","category","code","hex","newListItem","push","handleDownload","a","createElement","download","encodeURIComponent","stringify","body","appendChild","click","removeChild","style","margin","map","item","fakeAuth","isAuthenticated","authenticate","cb","setTimeout","signout","OldSchoolMenuLink","label","to","activeOnlyWhenExact","match","useRouteMatch","path","exact","AuthButton","history","useHistory","LoginPage","from","useLocation","pathname","replace","PrivateRoute","children","url","Drawing","Svg","Canvas","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.531bcb98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LiSEC_eye.677ff40b.jpg\";","import React from \"react\";\nimport \"./App.css\";\nimport banner from \"./LiSEC_eye.jpg\";\n\nfunction handleChange(e) {\n  var r = window.confirm(\"Press OK button to open!\");\n  if (r === true) {\n    window.open(\"https://www.lisec.com/\");\n  } else {\n    e.preventDefault();\n  }\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className =\"App-header\">\n        <img src={banner} className=\"App-logo\" alt=\"banner\" />\n        <a\n          className=\"App-link\"\n          href=\"/\"\n          target=\"_blank\"\n          onClick={e => handleChange(e)}\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    x: \"\",\r\n    y: \"\",\r\n    w: \"610\",\r\n    h: \"150\",\r\n    color: \"#881b4c\"\r\n  };\r\n  changeHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  colorHandler = type => {\r\n    switch (type) {\r\n      case \"primary\":\r\n        this.setState({ color: \"#881b4c\" });\r\n        break;\r\n      case \"secondary\":\r\n        this.setState({ color: \"rgb(46, 172, 41)\" });\r\n        break;\r\n      case \"tertiary\":\r\n        this.setState({ color: \"rgb(54, 17, 189)\" });\r\n        break;\r\n      case \"dark\":\r\n        this.setState({ color: \"rgb(20, 20, 20)\" });\r\n        break;\r\n      default:\r\n        this.setState({ color: \"#881b4c\" });\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    const { x, y, w, h, color } = this.state;\r\n    return (\r\n      <div className=\"w33\">\r\n        <h4>SVG</h4>\r\n        <div className=\"input-section\">\r\n          <label>X position</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"x\"\r\n            value={x}\r\n            onChange={this.changeHandler}\r\n          />\r\n\r\n          <label>Y position</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"y\"\r\n            value={y}\r\n            onChange={this.changeHandler}\r\n          />\r\n\r\n          <label>Width</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"w\"\r\n            value={w}\r\n            onChange={this.changeHandler}\r\n          />\r\n\r\n          <label>Height</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"h\"\r\n            value={h}\r\n            onChange={this.changeHandler}\r\n          />\r\n\r\n          <b>\r\n            Note:<i> Enter less than or equal to 500</i>\r\n          </b>\r\n        </div>\r\n        <div className=\"color-section d-flex\">\r\n          <div\r\n            className=\"color-primary\"\r\n            onClick={() => this.colorHandler(\"primary\")}\r\n          ></div>\r\n          <div\r\n            className=\"color-secondary\"\r\n            onClick={() => this.colorHandler(\"secondary\")}\r\n          ></div>\r\n          <div\r\n            className=\"color-tertiary\"\r\n            onClick={() => this.colorHandler(\"tertiary\")}\r\n          ></div>\r\n          <div\r\n            className=\"color-dark\"\r\n            onClick={() => this.colorHandler(\"dark\")}\r\n          ></div>\r\n        </div>\r\n        <svg className=\"display-section\" height={h} width={w} version=\"1.1\">\r\n          <polygon points={[x,y, x,h, w,h, w,0]} fill={color} />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    x: \"\",\r\n    y: \"\",\r\n    w: \"\",\r\n    h: \"\",\r\n    color: \"#881b4c\"\r\n  };\r\n  changeHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  colorHandler = type => {\r\n    switch (type) {\r\n      case \"primary\":\r\n        this.setState({ color: \"#881b4c\" });\r\n        break;\r\n      case \"secondary\":\r\n        this.setState({ color: \"rgb(46, 172, 41)\" });\r\n        break;\r\n      case \"tertiary\":\r\n        this.setState({ color: \"rgb(54, 17, 189)\" });\r\n        break;\r\n      case \"dark\":\r\n        this.setState({ color: \"rgb(20, 20, 20)\" });\r\n        break;\r\n      default:\r\n        this.setState({ color: \"#881b4c\" });\r\n        break;\r\n    }\r\n  };\r\n  componentDidUpdate() {\r\n    const { x, y, w, h, color } = this.state;\r\n    var c = document.getElementById(\"myCanvas\");\r\n    var ctx = c.getContext(\"2d\");\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(w, 0);\r\n    ctx.lineTo(w, h);\r\n    ctx.lineTo(x, h);\r\n    ctx.lineTo(x, y);\r\n    ctx.fillStyle = color;\r\n    ctx.fill();\r\n  }\r\n  render() {\r\n    const { x, y, w, h } = this.state;\r\n    return (\r\n      <div className=\"w33\">\r\n        <h4>Canvas</h4>\r\n        <div className=\"input-section\">\r\n          <label>X position</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"x\"\r\n            value={x}\r\n            onChange={this.changeHandler}\r\n          />\r\n\r\n          <label>Y position</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"y\"\r\n            value={y}\r\n            onChange={this.changeHandler}\r\n          />\r\n\r\n          <label>Width</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"w\"\r\n            value={w}\r\n            onChange={this.changeHandler}\r\n          />\r\n\r\n          <label>Height</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"h\"\r\n            value={h}\r\n            onChange={this.changeHandler}\r\n          />\r\n\r\n          <b>\r\n            Note:<i> Enter less than or equal to 500</i>\r\n          </b>\r\n        </div>\r\n        <div className=\"color-section d-flex\">\r\n          <div\r\n            className=\"color-primary\"\r\n            onClick={() => this.colorHandler(\"primary\")}\r\n          ></div>\r\n          <div\r\n            className=\"color-secondary\"\r\n            onClick={() => this.colorHandler(\"secondary\")}\r\n          ></div>\r\n          <div\r\n            className=\"color-tertiary\"\r\n            onClick={() => this.colorHandler(\"tertiary\")}\r\n          ></div>\r\n          <div\r\n            className=\"color-dark\"\r\n            onClick={() => this.colorHandler(\"dark\")}\r\n          ></div>\r\n        </div>\r\n        <canvas\r\n          id=\"myCanvas\"\r\n          className=\"display-section\"\r\n          height={h}\r\n          width={w}\r\n          version=\"1.1\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Upload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: [],\r\n      color: \"\",\r\n      category: \"\",\r\n      type: \"\",\r\n      hex: \"\"\r\n    };\r\n  }\r\n  fileChangedHandler = event => {\r\n    const { selectedFile } = this.state;\r\n    let reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      if (selectedFile.length !== 0) {\r\n        var newList = selectedFile.concat(JSON.parse(reader.result));\r\n        this.setState({\r\n          selectedFile: newList\r\n        });\r\n      } else {\r\n        this.setState({\r\n          selectedFile: JSON.parse(reader.result)\r\n        });\r\n      }\r\n    };\r\n    reader.readAsText(event.target.files[0]);\r\n  };\r\n\r\n  handleInput = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { selectedFile } = this.state;\r\n    var newColor = {\r\n      color: this.state.color,\r\n      category: this.state.category,\r\n      type: this.state.type,\r\n      code: { hex: this.state.hex }\r\n    };\r\n    var newListItem = [];\r\n    newListItem.push(newColor);\r\n    var newList = selectedFile.concat(newListItem);\r\n    this.setState({\r\n      selectedFile: newList,\r\n      color: \"\",\r\n      category: \"\",\r\n      type: \"\",\r\n      hex: \"\"\r\n    });\r\n  };\r\n\r\n  handleDownload = () => {\r\n    const { selectedFile } = this.state;\r\n    let filename = \"export.json\";\r\n    let contentType = \"application/json;charset=utf-8;\";\r\n\r\n    var a = document.createElement(\"a\");\r\n    a.download = filename;\r\n    a.href =\r\n      \"data:\" +\r\n      contentType +\r\n      \",\" +\r\n      encodeURIComponent(JSON.stringify(selectedFile));\r\n    a.target = \"_blank\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n  render() {\r\n    const { selectedFile } = this.state;\r\n    return (\r\n      <>\r\n        <div style={{ margin: \"50px\" }}>\r\n          <input type=\"file\" name=\"colors\" onChange={this.fileChangedHandler} />\r\n          <table>\r\n            <tr>\r\n              <th>Color name</th>\r\n              <th>Category</th>\r\n              <th>Type</th>\r\n              <th>HexCode</th>\r\n            </tr>\r\n            {selectedFile &&\r\n              selectedFile.map(item => (\r\n                <tr>\r\n                  <td>{item.color}</td>\r\n                  <td>{item.category}</td>\r\n                  <td>{item.type}</td>\r\n                  <td>{item.code.hex}</td>\r\n                </tr>\r\n              ))}\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"color\"\r\n                  value={this.state.color}\r\n                  onChange={this.handleInput}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  value={this.state.category}\r\n                  onChange={this.handleInput}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"type\"\r\n                  value={this.state.type}\r\n                  onChange={this.handleInput}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"hex\"\r\n                  value={this.state.hex}\r\n                  onChange={this.handleInput}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </table>\r\n\r\n          <div className=\"d-flex jc-bet\">\r\n            <button onClick={this.handleAdd}>Add</button>\r\n            <button onClick={this.handleDownload}>Download</button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport App from \"./App.js\";\r\nimport Svg from \"./Svg\";\r\nimport Canvas from \"./Canvas\";\r\nimport Upload from \"./Upload\";\r\n\r\nconst fakeAuth = {\r\n  isAuthenticated: false,\r\n  authenticate(cb) {\r\n    fakeAuth.isAuthenticated = true;\r\n    setTimeout(cb, 300); // fake async\r\n  },\r\n  signout(cb) {\r\n    fakeAuth.isAuthenticated = false;\r\n    setTimeout(cb, 300);\r\n  }\r\n};\r\n\r\nexport default function Routing() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <AuthButton />\r\n        <hr />\r\n        <OldSchoolMenuLink\r\n          activeOnlyWhenExact={true}\r\n          to=\"/Routing-And-Drawing\"\r\n          label=\"Home\"\r\n        />\r\n\r\n        <OldSchoolMenuLink\r\n          activeOnlyWhenExact={true}\r\n          to=\"/protected\"\r\n          label={fakeAuth.isAuthenticated === true ? \"Login to Page\" : \"asdasd\"}\r\n        />\r\n\r\n        <hr />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/Routing-And-Drawing\">\r\n            <App />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/protected\">\r\n            <PrivateRoute />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction OldSchoolMenuLink({ label, to, activeOnlyWhenExact }) {\r\n  let match = useRouteMatch({\r\n    path: to,\r\n    exact: activeOnlyWhenExact\r\n  });\r\n\r\n  return (\r\n    <div className={match ? \"active m-4\" : \"m-4\"}>\r\n      {match && \"> \"}\r\n      <Link to={to}>{label}</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AuthButton() {\r\n  let history = useHistory();\r\n\r\n  return fakeAuth.isAuthenticated ? (\r\n    <div className=\"m-4\">\r\n      <h1>Welcome!!!</h1>\r\n      <button\r\n        onClick={() => {\r\n          fakeAuth.signout(() => history.push(\"/Routing-And-Drawing\"));\r\n        }}\r\n      >\r\n        Sign out\r\n      </button>\r\n    </div>\r\n  ) : (\r\n    <p className=\"m-4\">You are not logged in.</p>\r\n  );\r\n}\r\n\r\nfunction LoginPage() {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  let { from } = location.state || { from: { pathname: \"/protected\" } };\r\n  let login = () => {\r\n    fakeAuth.authenticate(() => {\r\n      history.replace(from);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"m-4\">\r\n      <p>You must log in to view the page at {from.pathname}</p>\r\n      <button onClick={login}>Log in</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  let { path, url } = useRouteMatch();\r\n  return fakeAuth.isAuthenticated ? (\r\n    <div className=\"m-4\">\r\n      <h2>Please select a topic.</h2>\r\n\r\n      <OldSchoolMenuLink\r\n        activeOnlyWhenExact={true}\r\n        to={`${url}/upload`}\r\n        label=\"Upload\"\r\n      />\r\n\r\n      <OldSchoolMenuLink\r\n        activeOnlyWhenExact={true}\r\n        to={`${url}/drawing`}\r\n        label=\"Drawing tools\"\r\n      />\r\n\r\n      <Switch>\r\n        <Route exact path={`${path}/upload`}>\r\n          <Upload />\r\n        </Route>\r\n        <Route path={`${path}/drawing`}>\r\n          <Drawing />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  ) : (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/login\"\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Drawing() {\r\n  // The `path` lets us build <Route> paths that are\r\n  // relative to the parent route, while the `url` lets\r\n  // us build relative links.\r\n  let { path, url } = useRouteMatch();\r\n  return (\r\n    <div className=\"m-4\">\r\n      <h3>Topics</h3>\r\n      <OldSchoolMenuLink\r\n        activeOnlyWhenExact={true}\r\n        to={`${url}/svg`}\r\n        label=\"Rendering SVG\"\r\n      />\r\n\r\n      <OldSchoolMenuLink\r\n        activeOnlyWhenExact={true}\r\n        to={`${url}/canvas`}\r\n        label=\"Rendering Canvas\"\r\n      />\r\n\r\n      <Switch>\r\n        <Route exact path={`${path}/svg`}>\r\n          <Svg />\r\n        </Route>\r\n        <Route path={`${path}/canvas`}>\r\n          <Canvas />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routing from \"./Routing\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Routing />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}